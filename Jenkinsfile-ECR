@Library('my-shared-library') _

pipeline {
    agent any

    parameters {
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'EcrRepoName', description: 'name of the ECR repository', defaultValue: 'victorwilem')
        string(name: 'AwsRegion', description: 'name of the AWS region', defaultValue: 'eu-north-1')
        string(name: 'AwsAccountId', description: 'name of the AWS account id', defaultValue: '450477592783')
    }

    stages {
        stage('Git Checkout') {
                    when { expression {  params.action == 'create' } }
            steps {
                gitCheckout(
                branch: 'main',
                url: 'https://github.com/vikash-kumar01/mrdevops_java_app.git'
            )
            }
        }
        // stage('Unit Test maven') {
        //     when { expression {  params.action == 'create' } }

        //     steps {
        //         script {
        //             mvnTest()
        //         }
        //     }
        // }
        // stage('Integration Test maven') {
        //     when { expression {  params.action == 'create' } }
        //     steps {
        //         script {
        //             mvnIntegrationTest()
        //         }
        //     }
        // }
        // stage('Static code analysis: Sonarqube') {
        //     when { expression {  params.action == 'create' } }
        //     steps {
        //         script {
        //             def SonarQubecredentialsId = 'sonarqube-api'
        //             statiCodeAnalysis(SonarQubecredentialsId)
        //         }
        //     }
        // }
        // stage('Quality Gate Status Check : Sonarqube') {
        //     when { expression {  params.action == 'create' } }
        //     steps {
        //         script {
        //             def SonarQubecredentialsId = 'sonarqube-api'
        //             QualityGateStatus(SonarQubecredentialsId)
        //         }
        //     }
        // }
        stage('Maven Build : maven') {
            when { expression {  params.action == 'create' } }
            steps {
                script {
                    mvnBuild()
                }
            }
        }

        stage('Docker Build ECR : maven') {
            when { expression {  params.action == 'create' } }
            steps {
                script {
                    dockerBuildECR("${params.AwsRegion}", "${params.AwsAccountId}", "${params.EcrRepoName}")
                }
            }
        }

           stage('Docker Image Scan: trivy ') {
            when { expression { params.action == 'create' } }
            steps {
                script {
                    dockerImageScanECR("${params.AwsRegion}", "${params.AwsAccountId}", "${params.EcrRepoName}")
                }
            }
        }

             stage('Docker Image Push: AWS_ECR ') {
            when { expression { params.action == 'create' } }
            steps {
                script {
                    dockerImagePushECR("${params.AwsRegion}", "${params.AwsAccountId}", "${params.EcrRepoName}")
                }
            }
        }

     
    }
}
